# EBNF description of netlist language 

@@grammar :: Netlist
@@eol_comments :: /#.*?$/
@@whitespace :: /[\t ]+/

start 					= file $ ;
file 					= {newline | Entities:netline} ['||' {newline | Metadata:metaline}];
newline					= /[\r\n]+/ | $ ;

netline 					= [OutNets:netlist '<='] [InNets:netlist] ':' Descriptor:descriptor ['|' ID:ent_id];
netlist 				= ','.{name}+ ;

name 					= /[A-Za-z_][A-Za-z0-9_]*/ ;
ent_id 					= uint ;

descriptor              = decider_descriptor | constant_descriptor | arithmetic_descriptor | entity_descriptor;

decider_descriptor      = OutType:out_type OutSig:signal 'if' Op1:signal Comparator:comparator Op2:channel ;
out_type                = '1' | '@' ;
comparator              = '>' | '=' | '<' ;

constant_descriptor     = ','.{signal_with_value}+ ;
signal_with_value		= Value:int Signal:signal ;

arithmetic_descriptor   = OutSig:signal '=' Op1:signal Operator:operator Op2:channel ;
operator                = '+' | '-' | '/' | '*' ;

entity_descriptor		= factorio_name ;

channel                 = signal | int;
signal 					= full_signal | alpha_signal | special_signal ;
factorio_name			= /[A-Za-z0-9\-]+/ ;
full_signal				= factorio_name ;
alpha_signal			= /[A-Z]/ ;
special_signal			= 'each' | 'any' | 'all' ;

metaline				= @:(ent_meta | net_meta | global_meta) newline;
ent_meta				= ID:ent_id '|' X:(float | int) Y:(float | int) [Direction:direction] ;
direction				= 'N' | 'S' | 'E' | 'W' ;
net_meta				= WireName:name '|' Color:wire_color {Wires+:WIRE} ;
WIRE					= Terminals:TERMINAL '-' Terminals:TERMINAL ;
wire_color 				= 'red' | 'green' ;
TERMINAL				= ID:ent_id Type:['i' | 'o' | 'p'] ;
global_meta     = global_name | global_icons ;
global_name     = "name" '||' Name:/.*/ ;
global_icons    = 'icons' '||' Names:{factorio_name}+ ;

uint::int 					= /(0|[1-9][0-9]*)/ ;
int::int					= /(0|[\-]?[1-9][0-9]*)/ ;
float::float				= /[\-]?[0-9]*\.[0-9]+/ ;
